plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.bgauction'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
    configureEach {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//Spring Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// logging
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.6.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'
	// Lombok MapStruct binding
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// MySQL Driver
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.4'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.4'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.4'

	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += [
			"-Amapstruct.defaultComponentModel=spring"
	]
}

tasks.named('test') {
	useJUnitPlatform()
}
